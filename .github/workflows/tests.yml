name: Tests

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python: [ 3.6, 3.7, 3.8, 3.9 ]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e ".[tests,scripts]" --use-deprecated=legacy-resolver

    - name: Print environment
      run: |
        python -m pip freeze
        python --version
        python -c "import pysparkling; print(pysparkling.__version__)"

    - name: Check if import order is fine
      run: |
        isort . --check --diff

    - name: Test pysparkling.rdd
      run: python -m pytest --pyargs pysparkling.rdd -vv

    - name: Test pysparkling.tests
      if: matrix.os == 'ubuntu-latest'  # because of timing sensitivity in stream tests
      run: python -m pytest --pyargs pysparkling.tests -vv

    - name: Install SQL Dependencies
      run: |
        python -m pip install -e ".[sql]" --use-deprecated=legacy-resolver

    - name: Lint
      if: matrix.python == '3.9'
      # https://github.com/PyCQA/pylint/issues/3882
      run: pylint pysparkling scripts --disable=fixme,unsubscriptable-object

    - name: Lint
      if: matrix.python != '3.9'
      run: pylint pysparkling scripts --disable=fixme

    - name: pycodestyle
      run: python -m pycodestyle pysparkling scripts

    - name: Test All
      if: matrix.os == 'ubuntu-latest'  # because of timing sensitivity in stream tests
      run: python -m pytest -vv
